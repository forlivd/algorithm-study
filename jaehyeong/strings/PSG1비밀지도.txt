import java.util.*;

class Solution {
    public String[] solution(int n, int[] arr1, int[] arr2) {
        String[] answer = new String[n];
        
       StringBuilder sb;

        String[] binary = new String[n];
        for(int i = 0; i < n; i++) {
            String num = Integer.toBinaryString(arr1[i]);
            if(num.length() < n) {
                sb = new StringBuilder();
                for(int k = 0; k < n-num.length(); k++) sb.append(' ');
                sb.append(num);
                binary[i] = sb.toString();

            } else  binary[i] = num;
        }
        
        for(int i = 0; i < n; i++) {
            String num2 = Integer.toBinaryString(arr2[i]);
            if(num2.length() < n) {
                sb = new StringBuilder();
                for(int k = 0; k < n-num2.length(); k++) sb.append(' ');
                sb.append(num2);
                num2 = sb.toString();

            }
            
            sb = new StringBuilder();
            for(int j = 0; j < n ; j++) {
                if(binary[i].charAt(j) == '1' || num2.charAt(j) == '1') sb.append('#');
                else sb.append(' ');
            }
            answer[i] = sb.toString();
        }
        
        return answer;
    }
}

/*

 - "" 또는 "#" 벽
 - 두 지도중 하나라도 벽이면 벽

1. 간단한 접근
    int가 주어지면 2진수로 변환 한다.
        String의 각 index에서 1이면 벽, 2이면 빈 공간으로 변환해 둔다.
    int2를 2진수로 변환한다.
        각 배열의 인덱스를 0~N-1까지 비교하여 하나라도 #이면 정답에 #을 넣을 것이다. (sb) 


*/