import java.util.Arrays;

class Solution {
    public String solution(String s, int n) {
        
        // String을 Char[]로 바꾼다.
        char[] chars = s.toCharArray();
        System.out.println(Arrays.toString(chars));
        // char[] 각 값 마다 처리한다.
        for(int i = 0; i < chars.length; i++) {
            // char를 숫자로 바꾼다.
            int cNum = chars[i] - 0;
            // 바꾼 숫자에 + n을 한다.
            // 만일 범위를 넘어가면 처리한다.
            // 80 -> 100인 경우를 고려하면, 더하기 전에 처리해야한다.
            // 현재값이 소문자이면, +n이 90 넘으면 처리
            if(cNum <= 90 && cNum + n > 90) {
                cNum = 65 + (cNum + n) - 90 -1;
            }
            // 현재값이 대문자이면, +n이 122 넘으면 처리
            else if(cNum >= 97 && cNum + n > 122) {
                cNum = 97 + (cNum + n) - 122 - 1;
            } else if(cNum != 32) {
                cNum = cNum + n;
            }
            // char[]에 문자열로 바꿔서 넣는다.   
            chars[i] = (char) cNum;
        }
        
        // char를 String으로 출력한다.
        return new String(chars);
    }   

}

/*
1. 접근
    입력받은 문자열의 각 index를 확인한다.
    index char값을 숫자로 치환한다.
    숫자에+n을 한다.
        대, 소문자 범위를 넘어가면 처리해준다.
    숫자를 char로 바꾼다.
    
    StringBilder or Char[] 사용
        어차피 변환후 저장도 해야한다. char[] 사용하자.
        
    어차피 n이 25 이하이므로 반드시 1바퀴 이내이다.
    
    시간 복잡도는 8000 이하.
    
*/