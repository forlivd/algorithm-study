import java.util.*;

class Solution {
    public int solution(int[] citations) {
				int answer = 0;
        
        // 논문을 인용횟수의 오름차순으로 정렬한다.
        Arrays.sort(citations);
        
        // 0부터 1씩 h를 증가 시킨다.
        // h이상의 인용수를 가진 논문 수를 구한다.
        // 이전 논문 index 부터, 하나씩 탐색하며 h >= idx를 구한다.
        // 만일 h 이상 논문 수 >= h 이면 answer에 H를 넣는다.
        // h를 증가 시킨다.
        int h = -1;
        int idx = 0;
        boolean isContinue = true;
        while(isContinue) {
            h++;
            isContinue = false;
            for(int i = idx; i < citations.length; i++) {
                if(citations[i] >= h) {
                    idx = i;
                    isContinue = true;
                    break;
                } 
            }
            if(!isContinue) break;
            int hcnt = citations.length - idx;
            if(hcnt >= h) answer = h;
        }
        
        return answer;
    }
}

/*
논문 인용 횟수 <= 해당 논문 인용 회수 이상의 논문 수
일 때, 논문 인용 횟수의 최댓 값을 구해야 한다.

논문 인용 횟수로 정렬한다.
처음부터 순회하며, 현재 인덱스와, 남은 idx를 비교한다.
뒤에 있는 것은 모두 현재 인용 횟수 이상일 것이다.
따라서 현재까지 논문 수를 전체 수에서 빼주면 된다.
(같은 인용 횟수인 경우는? 
    가장 먼저 3에 도달하면, 3이상이 그 뒤이다.
    그럼 3인 경우는 모두 넘기자. 
    안넘기면? 처음 수가 나왔을 때 무조건 현재 수 이상이 뒤에 있어야한다.
    따라서 안되게 되면 그 즉시 종료해도 된다.)



*/