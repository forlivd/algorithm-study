import java.util.*;
import java.io.*;

public class Solution
{
    static HashMap<String, Integer> words;
    public static void main(String args[]) throws Exception
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        st = new StringTokenizer(br.readLine());
        int N = Integer.parseInt(st.nextToken());
        int M = Integer.parseInt(st.nextToken());

        words = new HashMap<>();
        for(int i=0;i<N;i++){
            String tmp = br.readLine();
            //M보다 짧으면 넘기기
            if(tmp.length()<M) continue;
            //hashmap에 있으면 value ++, 없으면 추가
            if(words.containsKey(tmp)){
                words.put(tmp,words.get(tmp)+1);
            }
            else {
                words.put(tmp, 1);
            }
        }

        //오름차순 정렬
        List<Map.Entry<String,Integer>> list = new ArrayList<>(words.entrySet());
        list.sort((o1,o2)->{
            int cmp = o2.getValue()-o1.getValue();
            if(cmp!=0) return cmp;
            else{
                //길이
                int len = o2.getKey().length() - o1.getKey().length();
                if(len!=0) return len;
                else{
                    //사전순
                    int tmp = o1.getKey().compareTo(o2.getKey());
                    return tmp;
                }
            }
        });

        for(Map.Entry<String,Integer> s:list){
            bw.append(s.getKey()).append("\n");
        }
        bw.flush();
        bw.close();

    }
}