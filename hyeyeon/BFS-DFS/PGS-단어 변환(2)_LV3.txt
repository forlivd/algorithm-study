import java.util.*;
import java.io.*;

class Solution {
    
    static boolean[] visited;
    static int answer;
    static String[] sWords;
    
    static boolean diff(String a, String b){
        int cnt=0;
        for(int i=0;i<a.length();i++){
            if(a.charAt(i)!=b.charAt(i)) cnt++;
        }
        if(cnt==1) return true;
        return false;
    }
    
    static void dfs(String begin, String target, int cnt){
        if(begin.equals(target)){
            answer = Math.min(cnt,answer);
        }
        for(int i=0;i<sWords.length;i++){
            if(!visited[i]&&diff(sWords[i],begin)){
                visited[i] = true;
                dfs(sWords[i],target,cnt+1);
                visited[i] = false;
            }
        }
        
    }
    public int solution(String begin, String target, String[] words) {
        answer = Integer.MAX_VALUE;
        visited = new boolean[words.length];
        sWords = new String[words.length];
        for(int i=0;i<words.length;i++){
            sWords[i] = words[i];
        }
        
        dfs(begin,target,0);
        
        if(answer==Integer.MAX_VALUE) answer = 0;
        return answer;
    }
}